# Foo

fn test_table_ret(): table
    let o = {a=1,b=2,}
    return o
end

fn add_test(): float
    return 1 + 3.0
end

fn power_test(): float
    return -4 ** 2.0
end

fn div_test(): float
    return 1 / 4
end

fn whole_div_test(): int
    return -5 // 2
end

fn whole_div_test_params(int a, int b): int
    return a // b
end

fn test_table(): int
    mut foo = 5
    let o = {a=1, b=2*foo - 1,c=0} # a = 1, b = 9
    foo = foo = o.a = foo
    return o.b + foo
end

fn rec(int b): int
    if b <= 1 then return 1 end
    return b * rec(b-1)
end

fn and(int a, int b): bool
    return a <= 0 && rec(b) <= 0
end

fn or(int a, int b): bool
    return a <= 0 || rec(b) <= 0
end
